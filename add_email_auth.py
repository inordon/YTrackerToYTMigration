#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ email –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import requests
import json
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

def load_mappings():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –º–∞–ø–ø–∏–Ω–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with open('user_mapping.json', 'r') as f:
        data = json.load(f)
    return data.get('users', {})

def load_config():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    with open('migration_config.json', 'r') as f:
        return json.load(f)

def get_yandex_users():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Yandex Tracker"""
    config = load_config()

    headers = {
        'Authorization': f"OAuth {config['yandex_tracker']['token']}",
        'X-Cloud-Org-Id': config['yandex_tracker']['org_id'],
        'Content-Type': 'application/json'
    }

    response = requests.get('https://api.tracker.yandex.net/v2/users', headers=headers)
    return response.json() if response.status_code == 200 else []

def add_email_to_user(youtrack_url, token, user_id, email, login):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ email –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
    temp_password = f"ChangeMe123_{login[-4:]}"

    # –î–æ–±–∞–≤–ª—è–µ–º email credential
    credentials_url = f"{youtrack_url}/hub/api/rest/users/{user_id}/credentials"

    credential_data = {
        'email': email,
        'password': temp_password,
        'changeOnLogin': True
    }

    response = requests.post(credentials_url, headers=headers, json=credential_data)

    if response.status_code in [200, 201]:
        logger.info(f"‚úÖ Email –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è {login}: {email}")
        logger.info(f"üîë –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: {temp_password}")
        return True
    else:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è email –¥–ª—è {login}: {response.status_code}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üìß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ email –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    config = load_config()
    user_mappings = load_mappings()
    yandex_users = get_yandex_users()

    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å yandex_id -> email
    email_map = {user['id']: user for user in yandex_users if user.get('email')}

    success_count = 0

    for yandex_id, youtrack_id in user_mappings.items():
        if yandex_id in email_map:
            yandex_user = email_map[yandex_id]
            email = yandex_user.get('email')
            login = yandex_user.get('login', yandex_id)

            if email:
                if add_email_to_user(
                        config['youtrack']['url'],
                        config['youtrack']['token'],
                        youtrack_id,
                        email,
                        login
                ):
                    success_count += 1

    logger.info(f"üéâ Email –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è {success_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    logger.info("üìù –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")

if __name__ == "__main__":
    main()