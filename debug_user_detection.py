#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import requests
import json
import logging

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

def load_config():
    with open('migration_config.json', 'r') as f:
        return json.load(f)

def test_user_detection():
    config = load_config()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YouTrack
    base_url = config['youtrack']['url'].rstrip('/')
    token = config['youtrack']['token']

    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }

    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã—Ö –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Yandex Tracker
    yandex_headers = {
        'Authorization': f"OAuth {config['yandex_tracker']['token']}",
        'X-Cloud-Org-Id': config['yandex_tracker']['org_id'],
        'Content-Type': 'application/json'
    }

    response = requests.get(
        'https://api.tracker.yandex.net/v2/users?page=1&perPage=5',
        headers=yandex_headers
    )

    yandex_users = response.json()

    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 50)

    for i, user in enumerate(yandex_users, 1):
        login = user.get('login')
        print(f"\n{i}. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {login}")

        # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π API
        response = requests.get(
            f"{base_url}/api/users",
            headers=headers,
            params={'query': login, 'fields': 'id,login', '$top': 100}
        )

        print(f"   API users –ø–æ–∏—Å–∫: {response.status_code}")
        if response.status_code == 200:
            api_users = response.json()
            found_api = any(u.get('login') == login for u in api_users)
            print(f"   –ù–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ API: {found_api}")
            if found_api:
                for u in api_users:
                    if u.get('login') == login:
                        print(f"   ID —á–µ—Ä–µ–∑ API: {u.get('id')}")

        # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Hub API
        response = requests.get(
            f"{base_url}/hub/api/rest/users",
            headers=headers,
            params={'query': login, 'fields': 'id,login', '$top': 100}
        )

        print(f"   Hub API –ø–æ–∏—Å–∫: {response.status_code}")
        if response.status_code == 200:
            hub_users = response.json()
            found_hub = any(u.get('login') == login for u in hub_users)
            print(f"   –ù–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ Hub: {found_hub}")
            if found_hub:
                for u in hub_users:
                    if u.get('login') == login:
                        print(f"   ID —á–µ—Ä–µ–∑ Hub: {u.get('id')}")

        # –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        yt_user = {
            'login': login,
            'name': user.get('display', login),
            'isActive': True
        }

        if user.get('email'):
            yt_user['email'] = user.get('email')

        response = requests.post(
            f"{base_url}/hub/api/rest/users",
            headers=headers,
            json=yt_user,
            params={'fields': 'id,login,name'}
        )

        print(f"   –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.status_code}")
        if response.status_code in [200, 201]:
            created = response.json()
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Å ID: {created.get('id')}")
        elif response.status_code == 409:
            print(f"   ‚ö†Ô∏è –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (409)")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")

if __name__ == "__main__":
    test_user_detection()