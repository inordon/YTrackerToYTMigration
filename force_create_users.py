#!/usr/bin/env python3
"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏)
"""

import requests
import json
import time
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

def load_config():
    with open('migration_config.json', 'r') as f:
        return json.load(f)

def force_create_missing_users():
    config = load_config()

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏)
    missing_users = [
        'adm', 'ahhehkob', 'akim.vladimirsky', 'alena.fisenko',
        'alexander.karavaev', 'alexxandr', 'alina.smaznova',
        'andrei.raikov', 'andrey.ivanov', 'andrey.korzhevin'
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∏–∑ —Å–ø–∏—Å–∫–∞
    ]

    headers = {
        'Authorization': f"Bearer {config['youtrack']['token']}",
        'Content-Type': 'application/json'
    }

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Yandex
    yandex_headers = {
        'Authorization': f"OAuth {config['yandex_tracker']['token']}",
        'X-Cloud-Org-Id': config['yandex_tracker']['org_id'],
    }

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Yandex
    yandex_response = requests.get(
        'https://api.tracker.yandex.net/v2/users?page=1&perPage=200',
        headers=yandex_headers
    )
    yandex_users = yandex_response.json()

    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ª–æ–≥–∏–Ω -> –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data_map = {user.get('login'): user for user in yandex_users}

    success_count = 0

    print(f"üî® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–û–ó–î–ê–ù–ò–ï {len(missing_users)} –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 50)

    for i, login in enumerate(missing_users, 1):
        if login not in user_data_map:
            print(f"{i}. ‚ùå {login} - –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Yandex Tracker")
            continue

        user_data = user_data_map[login]

        print(f"{i}. üî® –°–æ–∑–¥–∞–µ–º: {login}")

        yt_user = {
            'login': login,
            'name': user_data.get('display', login),
            'isActive': True
        }

        if user_data.get('email'):
            yt_user['email'] = user_data.get('email')

        try:
            response = requests.post(
                f"{config['youtrack']['url']}/hub/api/rest/users",
                headers=headers,
                json=yt_user,
                params={'fields': 'id,login,name'}
            )

            if response.status_code in [200, 201]:
                created = response.json()
                print(f"   ‚úÖ –°–û–ó–î–ê–ù! ID: {created.get('id')}")
                success_count += 1
            elif response.status_code == 409:
                print(f"   ‚ö†Ô∏è  –£–ñ–ï –°–£–©–ï–°–¢–í–£–ï–¢")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")

        except Exception as e:
            print(f"   üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–∑–¥–∞–Ω–∏—è–º–∏

    print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {success_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

if __name__ == "__main__":
    force_create_missing_users()