#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–±–ª–∞—á–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π Yandex Tracker
"""

import re
import json

def fix_file(filename):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–±–ª–∞—á–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π"""
    with open(filename, 'r', encoding='utf-8') as f:
        content = f.read()

    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º __init__ –º–µ—Ç–æ–¥ YandexTrackerClient
    old_init = r'def __init__\(self, token: str, org_id: str\):'
    new_init = 'def __init__(self, token: str, org_id: str, is_cloud_org: bool = False):'
    content = re.sub(old_init, new_init, content)

    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    old_headers = r"'X-Org-ID': org_id,"
    new_headers = """# –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        org_header = 'X-Cloud-Org-Id' if is_cloud_org else 'X-Org-ID'
        self.session.headers.update({
            'Authorization': f'OAuth {token}',
            org_header: org_id,
            'Content-Type': 'application/json'
        })"""

    # –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Å—å –±–ª–æ–∫ headers
    content = re.sub(
        r'self\.session\.headers\.update\(\{\s*\'Authorization\': f\'OAuth \{token\}\',\s*\'X-Org-ID\': org_id,\s*\'Content-Type\': \'application/json\'\s*\}\)',
        new_headers,
        content
    )

    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ main()
    old_client_creation = r'yandex_client = YandexTrackerClient\(\s*config\[\'yandex_tracker\'\]\[\'token\'\],\s*config\[\'yandex_tracker\'\]\[\'org_id\'\]\s*\)'
    new_client_creation = '''is_cloud_org = config['yandex_tracker'].get('is_cloud_org', False)
    
    yandex_client = YandexTrackerClient(
        config['yandex_tracker']['token'],
        config['yandex_tracker']['org_id'],
        is_cloud_org
    )'''

    content = re.sub(old_client_creation, new_client_creation, content)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(content)

    print(f"‚úÖ –§–∞–π–ª {filename} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –æ–±–ª–∞—á–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π")

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —ç—Ç–∞–ø–æ–≤
files_to_fix = [
    'step1_users_migration.py',
    'step2_projects_migration.py',
    'step3_issues_migration.py',
    'step4_links_migration.py'
]

print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–±–ª–∞—á–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π...")

for filename in files_to_fix:
    try:
        fix_file(filename)
    except FileNotFoundError:
        print(f"‚ö†Ô∏è –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è {filename}: {e}")

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config = {
    "yandex_tracker": {
        "token": "y0__xCH-cWlqveAAhjTuDUggYrdqhL8M_i7Evqh2oZPuiY6BLv5n6Uh-g",
        "org_id": "bpfdnoim0ts5emqkj1u4",
        "is_cloud_org": True
    },
    "youtrack": {
        "url": "https://your-company.myjetbrains.com",
        "token": "YOUR_YOUTRACK_TOKEN"
    },
    "migration_options": {
        "migrate_comments": True,
        "batch_size": 50,
        "rate_limit_delay": 0.5
    }
}

with open('migration_config.json', 'w', encoding='utf-8') as f:
    json.dump(config, f, ensure_ascii=False, indent=2)

print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
print("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:")
print("python step1_users_migration.py")